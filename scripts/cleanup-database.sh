#!/bin/bash

# Direct Supabase Database Cleanup via REST API
# Uses curl to directly access Supabase and clean up the database

echo "üöÄ Direct Database Cleanup via REST API"
echo "======================================="

# Load environment variables
source .env

echo "üîó Testing Supabase connection..."
echo "URL: $NEXT_PUBLIC_SUPABASE_URL"

# Test connection
curl -s -X GET "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/" \
     -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
     -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" > /dev/null

if [ $? -eq 0 ]; then
    echo "‚úÖ Connection successful!"
else
    echo "‚ùå Connection failed"
    exit 1
fi

echo ""
echo "üßπ Starting database cleanup..."

# Method 1: Try to execute SQL via the query RPC
echo "üìÑ Attempting SQL execution..."

SQL_CONTENT=$(cat complete_database_reset.sql)

# Try RPC query method
RESPONSE=$(curl -s -X POST "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/rpc/query" \
     -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
     -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
     -H "Content-Type: application/json" \
     -d "{\"query_text\": $(echo "$SQL_CONTENT" | jq -R -s '.')}")

echo "Response: $RESPONSE"

if echo "$RESPONSE" | grep -q "error"; then
    echo "‚ùå RPC query method failed"
    echo ""
    echo "üîß Trying alternative method..."
    
    # Method 2: Try individual table operations
    echo "üóëÔ∏è  Attempting to drop individual tables..."
    
    # Try to list existing tables first
    TABLE_RESPONSE=$(curl -s -X GET "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/information_schema.tables?table_schema=eq.public&select=table_name" \
         -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
         -H "apikey: $SUPABASE_SERVICE_ROLE_KEY")
    
    echo "Existing tables: $TABLE_RESPONSE"
    
    if echo "$TABLE_RESPONSE" | grep -q "user"; then
        echo "üîç Found problematic tables that need cleanup"
        echo ""
        echo "‚ö†Ô∏è  Manual cleanup required:"
        echo "1. Go to https://supabase.com/dashboard"
        echo "2. Select your EquipGG project" 
        echo "3. Click 'SQL Editor'"
        echo "4. Copy the content from complete_database_reset.sql"
        echo "5. Paste and click 'Run'"
        echo ""
        echo "This will fix all the column name and table structure issues."
    else
        echo "‚úÖ No problematic tables found"
    fi
    
else
    echo "‚úÖ Database cleanup completed successfully!"
    echo ""
    echo "üéâ Your database has been cleaned up and recreated!"
    echo "üìã What was fixed:"
    echo "  ‚úÖ Removed tables with wrong structure"
    echo "  ‚úÖ Created tables with correct column names (display_name)"
    echo "  ‚úÖ Fixed table names (activity_feed vs user_activity_feed)"
    echo "  ‚úÖ Added sample data"
    echo ""
    echo "üöÄ Visit https://equipgg.net to test the fixes!"
fi